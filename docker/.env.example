# Global Configuration
TAG="0.1.4" #should be set to the tag of the version you are using
ECR_REGISTRY="" # should be set to Greptile's private ECR registry
AWS_REGION="" #should be set to AWS Region of bedrock
AWS_ACCESS_KEY_ID="" #should be set to your AWS Access Key ID
AWS_SECRET_ACCESS_KEY="" #should be set to your AWS Secret Access Key

RABBITMQ_USER="user" #should be set to your RabbitMQ user
RABBITMQ_PASSWORD="password" #should be set to your RabbitMQ password

DB_HOST="" #should be set to your database host (if using RDS, this will be the endpoint of the RDS instance)
DB_USER="postgres" #should be set to your database user
DB_PASSWORD="" #should be set to your database password
DB_PORT="5432" #should be set to your database port
DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/postgres"

# Redis Configuration
REDIS_HOST="" #should be set to your Redis host. If using Elasticache, this will be the endpoint of the Elasticache cluster
REDIS_PORT="6379" #should be set to your Redis port (usually 6379)
REDIS_PASSWORD="" #should be set to your Redis password

# SSL_CERTS_PATH="/custom/path/to/certs" # Optional: Override the default SSL certificates path (/opt/greptile/certs), copy here with -L to flatten symlinks
# SSL_CERT_NAME="" # Optional: Name of the specific certificate file to use, e.g. "ca-certificates.crt"

# Service URLs
API_URL="http://greptile_api_service:3002"
AUTH_URL="http://greptile_auth_service:3001"
WEB_URL="http://localhost:3000"

# Authentication
JWT_SECRET="" # should be set to a random string of length 32 (no special chars)
TOKEN_ENCRYPTION_KEY="" # should be set to a random string of length 32 (no special chars)
AUTH_SECRET="${JWT_SECRET}"

# BoxyHQ/SAML Configuration (Optional)
AUTH_SAML_ONLY="false" #should be set to true if using BoxyHQ/SAML
SAML_ID=""
SAML_SECRET=""
BOXYHQ_API_KEY=""
BOXYHQ_URL="" # example: "http://jackson:5225"
AUTH_BOXYHQ_URL="" #example: http://jackson:5225
AUTH_BOXYHQ_SAML_ISSUER="" #example: http://jackson:5225


# GitHub Configuration
GITHUB_ENABLED="false" #should be set to false if using GitHub Enterprise
GITHUB_ENTERPRISE_ENABLED="true" #should be set to true if using GitHub Enterprise

# Set these if using Github Cloud
# GITHUB_CLIENT_ID=""
# GITHUB_CLIENT_ID=""
# GITHUB_CLIENT_SECRET=""
# GITHUB_CLIENT_SECRET=""
# GITHUB_PRIVATE_KEY=""
# GITHUB_APP_ID="4"

# GitHub Enterprise Configuration
GITHUB_WEBHOOK_SECRET="" #generate a random string of length 32 (no special chars) and set it here and in the github app webhook
GITHUB_APP_URL="" #example: https://github.github-greplica.com/github-apps/greptile-onprem. This should be set after you make the github app
GITHUB_ENTERPRISE_URL="" #example: https://github.github-greplica.com
GITHUB_ENTERPRISE_API_URL="" #example: https://github.github-greplica.com/api/v3
GITHUB_WEBHOOK_URL="http://greptile_github_service:3010/webhook"
GITHUB_OAUTH_ENABLED="false"
GITHUB_ENTERPRISE_APP_ID="" # should be set to the AppID you see in github Apps
GITHUB_ENTERPRISE_APP_PRIVATE_KEY="" # should be set to the Private Key you see in github Apps. Note: this should be a single line string with '\n' at the end of each line
GITHUB_ENTERPRISE_CLIENT_ID="" # should be set to the Client ID you see in github Apps
GITHUB_ENTERPRISE_CLIENT_SECRET="" # should be set to the Client Secret you see in github Apps

# Model Configurations
#these are the defaults but you can change them to use different models
AGENT_MODEL="us.anthropic.claude-3-5-haiku-20241022-v1:0"
CHAT_MODEL="us.anthropic.claude-3-5-sonnet-20241022-v2:0"
AGENT_MODEL_PROVIDER="bedrock"
CHAT_MODEL_PROVIDER="bedrock"
SUMMARIZER_MODEL="us.anthropic.claude-3-5-haiku-20241022-v1:0"
SUMMARIZER_MODEL_PROVIDER="bedrock"
EMBEDDINGS_MODEL="amazon.titan-embed-text-v1"
EMBEDDINGS_MODEL_PROVIDER="bedrock"
REFINER_MODEL="us.anthropic.claude-3-5-haiku-20241022-v1:0"
REFINER_MODEL_PROVIDER="bedrock"
AZURE_OPENAI_KEY=""
AZURE_OPENAI_URL=""
AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT_NAME=""
AZURE_OPENAI_EMBEDINGS_API_VERSION=""

# Vector Database Configuration
VECTOR_DB_PROVIDER="pgvector"
VECTOR_DB_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/vector"
BATCH_SIZE="100"
LLM_TIMEOUT="300000"

# Feature Flags. You do not need to change these in an enterprise environment.
NOTIFICATIONS_ENABLED="false"
ANALYTICS_ENABLED="false"
BILLING_ENABLED="false"

# Hatchet Configuration. These need to be obtained from the hatchet container like shown here : https://docs.hatchet.run/self-hosting/docker-compose
HATCHET_CLIENT_TOKEN=""
HATCHET_CLIENT_TLS_STRATEGY=none # none is the default and recommended strategy


HATCHET_DB_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/hatchet"
HATCHET_RABBITMQ_USER="user"
HATCHET_RABBITMQ_PASSWORD="password"
HATCHET_RABBITMQ_URL="amqp://${HATCHET_RABBITMQ_USER}:${HATCHET_RABBITMQ_PASSWORD}@rabbitmq:5672/"

EMAIL_PROVIDER="SES"

AUTH_EMAIL_FROM="no-reply@greptile.com" #can change this to your own email provider
GITLAB_ENABLED="false" #can change this to true if using Gitlab
SLACK_ENABLED="false"
LINEAR_ENABLED="false"
BASE_DB_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/postgres"


JACKSON_DB_ENCRYPTION_KEY=<generate with: openssl rand -base64 32>
JACKSON_HOST_URL=<sso service hostname, e.g. sso.greptile.com or localhost:5225 for local testing>
JACKSON_EXTERNAL_URL=<full URL, e.g. https://sso.greptile.com or http://localhost:5225 for local testing>
JACKSON_API_KEYS=<generate with: openssl rand -base64 32>
JACKSON_SAML_AUDIENCE=<identifier for your service, e.g. https://sso.greptile.com>
JACKSON_ADMIN_CREDENTIALS=<admin email:password for Jackson admin console>
JACKSON_PUBLIC_KEY=<certificate - must start with "-----BEGIN CERTIFICATE-----">
JACKSON_PRIVATE_KEY=<private key for the certificate>
JACKSON_IDP_ENABLED=true
