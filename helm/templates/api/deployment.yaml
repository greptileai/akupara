apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  annotations:
    "helm.sh/hook-weight": "0"
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: "{{ .Values.global.ecr.registry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.api.service.port }}
          envFrom:
            - configMapRef:
                name: api-config
          env:
            - name: LOG_FORMAT
              value: json
            - name: URL
              value: {{ default (printf "http://api.%s.svc.cluster.local:%v" .Release.Namespace (.Values.api.service.port | default 3002)) .Values.api.url | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwtSecret
            - name: TOKEN_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: tokenEncryptionKey
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: password
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: url
            - name: HATCHET_CLIENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hatchet-client-config
                  key: HATCHET_CLIENT_TOKEN
          resources:
            {{ toYaml .Values.api.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.api.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 60