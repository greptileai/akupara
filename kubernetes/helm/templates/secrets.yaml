{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace "hatchet-shared-config") | default dict }}
{{- $existingData := (get $existingSecret "data") | default dict }}
apiVersion: v1
kind: Secret
metadata:
  name: hatchet-shared-config
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep 
    helm.sh/hook-weight: "-9"
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    force-recreate: "true"
data:
  # First ensure any existing data is merged properly
  {{- range $key, $value := $existingData }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  # Then add our new data
  DATABASE_POSTGRES_HOST: {{ .Values.database.env.host | b64enc | quote }}
  DATABASE_POSTGRES_PORT: {{ .Values.database.env.port | toString | b64enc | quote }}
  DATABASE_POSTGRES_USERNAME: {{ "hatchet" | b64enc | quote }}
  DATABASE_POSTGRES_PASSWORD: {{ "hatchet" | b64enc | quote }}
  DATABASE_POSTGRES_DB_NAME: {{ "hatchet" | b64enc | quote }}
  DATABASE_POSTGRES_SSL_MODE: {{ "require" | b64enc | quote }}
  DATABASE_URL: {{ printf "postgresql://%s:%s@%s:%s/%s?sslmode=require" "hatchet" "hatchet" .Values.database.env.host (.Values.database.env.port | toString) "hatchet" | b64enc | quote }} 
